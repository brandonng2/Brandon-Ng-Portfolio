{"ast":null,"code":"import Project1 from \"../../assets/project1.jpg\";\nimport Project2 from \"../../assets/project2.jpg\";\nimport Project3 from \"../../assets/project3.jpg\";\nimport Project4 from \"../../assets/project4.jpg\";\nimport Project5 from \"../../assets/project5.jpg\";\nimport Project6 from \"../../assets/project6.jpg\";\nimport Project7 from \"../../assets/project7.jpg\";\nexport const Data = [{\n  id: 1,\n  image: Project1,\n  title: \"Plant Disease Detector\",\n  description: \"A plant disease detector utilizing, a CNN model to classify leaf images and identify diseases across various plant species, achieving 77% accuracy across 38 disease categories.\",\n  language: \"Python, Pandas, Pytorch, OpenCV\"\n}, {\n  id: 2,\n  image: Project2,\n  title: \"ChatGPT EDA\",\n  description: \"A project examining the impact of ChatGPT on UCSD's educational environment to uncover patterns in study hours, grades, and AI tool usage across departments.\",\n  language: \"Python, Pandas, Scikit-learn, Matplotlib\"\n}, {\n  id: 3,\n  image: Project3,\n  title: \"Culinary Insights\",\n  description: \"An EDA project analyzing Food.com recipes, employing data cleaning, hypothesis testing, and a Random Forest model to predict recipe healthiness based on nutritional features.\",\n  language: \"Python, Pandas, Scikit-learn, Matplotlib\"\n}, {\n  id: 4,\n  image: Project4,\n  title: \"FitHub\",\n  description: \"A mobile fitness application that helps users track workouts, find nearby gyms, and manage exercise data using a calendar system and Firebase backend.\",\n  language: \"Swift, Firebase, FS Calendar, GooglePlace\"\n}, {\n  id: 5,\n  image: Project5,\n  title: \"Twitter App\",\n  description: \"A fully functional Twitter client allowing users to view, compose, favorite, and retweet tweets, with features like real-time feed updates and infinite scrolling.\",\n  language: \"Swift, Twitter API\"\n}, {\n  id: 6,\n  image: Project6,\n  title: \"Encyclodex\",\n  description: \"An interactive website replicating the Pokémon Pokédex, utilizing asynchronous functions to fetch data from PokéAPI and dynamically update the page.\",\n  language: \"HTML, CSS, Javascript\"\n}, {\n  id: 7,\n  image: Project7,\n  title: \"UCSD SET Scraper\",\n  description: \"A script to automate data collection from the UCSD SET website, compiling course evaluation data into a structured Pandas DataFrame for further analysis.\",\n  language: \"Python, Pandas, BeautifulSoup, Selenium\"\n}, {\n  id: 8,\n  image: Project4,\n  title: \"PantryPal\",\n  description: \"A smart pantry management system utilizing React, Next.js, and Firebase, featuring AI-powered receipt scanning with Google's Gemini API to automate inventory updates.\",\n  language: \"Python, Pandas, BeautifulSoup, Selenium\"\n}];","map":{"version":3,"names":["Project1","Project2","Project3","Project4","Project5","Project6","Project7","Data","id","image","title","description","language"],"sources":["/Users/brandonng/Documents/GitHub/Brandon-Ng-Portfolio/src/components/projects/Data.jsx"],"sourcesContent":["import Project1 from \"../../assets/project1.jpg\"\nimport Project2 from \"../../assets/project2.jpg\"\nimport Project3 from \"../../assets/project3.jpg\"\nimport Project4 from \"../../assets/project4.jpg\"\nimport Project5 from \"../../assets/project5.jpg\"\nimport Project6 from \"../../assets/project6.jpg\"\nimport Project7 from \"../../assets/project7.jpg\"\n\nexport const Data = [\n    {\n        id: 1,\n        image: Project1,\n        title: \"Plant Disease Detector\",\n        description: \"A plant disease detector utilizing, a CNN model to classify leaf images and identify diseases across various plant species, achieving 77% accuracy across 38 disease categories.\",\n        language: \"Python, Pandas, Pytorch, OpenCV\",\n    },\n    {\n        id: 2,\n        image: Project2,\n        title: \"ChatGPT EDA\",\n        description: \"A project examining the impact of ChatGPT on UCSD's educational environment to uncover patterns in study hours, grades, and AI tool usage across departments.\",\n        language: \"Python, Pandas, Scikit-learn, Matplotlib\",\n    },\n    {\n        id: 3,\n        image: Project3,\n        title: \"Culinary Insights\",\n        description: \"An EDA project analyzing Food.com recipes, employing data cleaning, hypothesis testing, and a Random Forest model to predict recipe healthiness based on nutritional features.\",\n        language: \"Python, Pandas, Scikit-learn, Matplotlib\",\n    },\n    {\n        id: 4,\n        image: Project4,\n        title: \"FitHub\",\n        description: \"A mobile fitness application that helps users track workouts, find nearby gyms, and manage exercise data using a calendar system and Firebase backend.\",\n        language: \"Swift, Firebase, FS Calendar, GooglePlace\",\n    },\n    {\n        id: 5,\n        image: Project5,\n        title: \"Twitter App\",\n        description: \"A fully functional Twitter client allowing users to view, compose, favorite, and retweet tweets, with features like real-time feed updates and infinite scrolling.\",\n        language: \"Swift, Twitter API\",\n    },\n    {\n        id: 6,\n        image: Project6,\n        title: \"Encyclodex\",\n        description: \"An interactive website replicating the Pokémon Pokédex, utilizing asynchronous functions to fetch data from PokéAPI and dynamically update the page.\",\n        language: \"HTML, CSS, Javascript\",\n    },\n    {\n        id: 7,\n        image: Project7,\n        title: \"UCSD SET Scraper\",\n        description: \"A script to automate data collection from the UCSD SET website, compiling course evaluation data into a structured Pandas DataFrame for further analysis.\",\n        language: \"Python, Pandas, BeautifulSoup, Selenium\",\n    },\n    {\n        id: 8,\n        image: Project4,\n        title: \"PantryPal\",\n        description: \"A smart pantry management system utilizing React, Next.js, and Firebase, featuring AI-powered receipt scanning with Google's Gemini API to automate inventory updates.\",\n        language: \"Python, Pandas, BeautifulSoup, Selenium\",\n    },\n];"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAEhD,OAAO,MAAMC,IAAI,GAAG,CAChB;EACIC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAET,QAAQ;EACfU,KAAK,EAAE,wBAAwB;EAC/BC,WAAW,EAAE,kLAAkL;EAC/LC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAER,QAAQ;EACfS,KAAK,EAAE,aAAa;EACpBC,WAAW,EAAE,+JAA+J;EAC5KC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAEP,QAAQ;EACfQ,KAAK,EAAE,mBAAmB;EAC1BC,WAAW,EAAE,gLAAgL;EAC7LC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAEN,QAAQ;EACfO,KAAK,EAAE,QAAQ;EACfC,WAAW,EAAE,wJAAwJ;EACrKC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAEL,QAAQ;EACfM,KAAK,EAAE,aAAa;EACpBC,WAAW,EAAE,oKAAoK;EACjLC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAEJ,QAAQ;EACfK,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE,sJAAsJ;EACnKC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAEH,QAAQ;EACfI,KAAK,EAAE,kBAAkB;EACzBC,WAAW,EAAE,2JAA2J;EACxKC,QAAQ,EAAE;AACd,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAEN,QAAQ;EACfO,KAAK,EAAE,WAAW;EAClBC,WAAW,EAAE,wKAAwK;EACrLC,QAAQ,EAAE;AACd,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}